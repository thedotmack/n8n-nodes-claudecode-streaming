{
  "name": "Claude Code Advanced Hooks Example",
  "nodes": [
    {
      "parameters": {},
      "id": "8b24d5dd-6efe-40b7-acc1-b3fb1f44a1c2",
      "name": "When clicking 'Test workflow'",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        680,
        300
      ]
    },
    {
      "parameters": {
        "prompt": "Create a Python web scraper for extracting product information from e-commerce sites. Include error handling, rate limiting, and data validation.",
        "model": "opus",
        "maxTurns": 20,
        "timeout": 900,
        "claudeHooks": {
          "enableHooks": true,
          "preToolUseHooks": {
            "hooks": [
              {
                "matcher": "Write|Edit",
                "command": "python3 -c \"import json, sys; data=json.load(sys.stdin); path=data.get('tool_input',{}).get('file_path',''); sys.exit(2 if any(p in path for p in ['.env', 'package-lock.json', '.git/']) else 0)\"",
                "permissionDecision": "ask"
              },
              {
                "matcher": "Bash",
                "command": "echo 'Bash command execution requested' >> /tmp/bash-commands.log",
                "permissionDecision": "allow"
              }
            ]
          },
          "postToolUseHooks": {
            "hooks": [
              {
                "matcher": "Write|Edit",
                "command": "jq -r '.tool_input.file_path' | { read file_path; if echo \"$file_path\" | grep -q '\\.py$' ; then python3 -m black \"$file_path\" 2>/dev/null || true; fi; }"
              },
              {
                "matcher": "MultiEdit",
                "command": "echo 'Multiple files edited, running project-wide formatting' && find . -name '*.py' -exec python3 -m black {} + 2>/dev/null || true"
              }
            ]
          },
          "sessionStartHooks": {
            "hooks": [
              {
                "command": "echo 'Starting web scraper development session' >> /tmp/development-session.log",
                "additionalContext": "Development Environment Guidelines:\\n- Follow PEP 8 style guidelines\\n- Include comprehensive error handling\\n- Add proper logging and monitoring\\n- Use type hints where appropriate\\n- Include unit tests for critical functions"
              }
            ]
          }
        },
        "advancedConfig": {
          "systemPrompt": "You are an expert Python developer specializing in web scraping and data extraction. Focus on writing clean, maintainable code with proper error handling, rate limiting, and respect for robots.txt files.",
          "permissionMode": "default",
          "sessionManagement": "new",
          "workingDirectory": "/tmp/web-scraper-project",
          "environmentVariables": {
            "variables": [
              {
                "name": "PYTHONPATH",
                "value": "/tmp/web-scraper-project"
              },
              {
                "name": "LOG_LEVEL",
                "value": "DEBUG"
              }
            ]
          },
          "debug": true,
          "enableTelemetry": true,
          "telemetryConfig": {
            "configs": [
              {
                "name": "OTEL_METRICS_EXPORTER",
                "value": "console"
              },
              {
                "name": "OTEL_METRIC_EXPORT_INTERVAL",
                "value": "5000"
              }
            ]
          }
        },
        "allowedTools": [
          "Read",
          "Write", 
          "Edit",
          "MultiEdit",
          "Bash",
          "Grep",
          "LS",
          "Glob"
        ],
        "streamingOptions": {
          "enableStreaming": true,
          "includeTimestamps": true,
          "webhookUrl": "https://hooks.n8n.cloud/webhook/claude-development-updates"
        }
      },
      "id": "927eb4be-46d8-45f4-9ad8-f0c8d7db7ad8",
      "name": "Claude Code with Advanced Hooks",
      "type": "@thedotmack/n8n-nodes-claudecode-streaming.claudeCodeStreaming",
      "typeVersion": 1,
      "position": [
        920,
        300
      ]
    },
    {
      "parameters": {
        "content": "=Web Scraper Development Complete:\\n\\n{{ $json.result }}\\n\\nDevelopment Statistics:\\n- Total turns: {{ $json.metrics.num_turns }}\\n- Execution time: {{ $json.metrics.duration_ms }}ms\\n- Total cost: ${{ $json.metrics.total_cost_usd }}\\n\\nFiles created: {{ $json.summary.assistantMessageCount }} interactions",
        "options": {}
      },
      "id": "8f7c4f36-9d9e-42f4-9b15-7d8f4e5c2b3a",
      "name": "Development Summary",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1160,
        180
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "blockType",
              "value": "={{ $json.type }}"
            },
            {
              "name": "content",
              "value": "={{ $json.content }}"
            },
            {
              "name": "timestamp",
              "value": "={{ $json.timestamp }}"
            }
          ]
        },
        "options": {}
      },
      "id": "7a9c3f15-8e2d-41b9-9f3c-4d8e5c2b1a6f",
      "name": "Process Streaming Blocks",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        1160,
        420
      ]
    }
  ],
  "connections": {
    "When clicking 'Test workflow'": {
      "main": [
        [
          {
            "node": "Claude Code with Advanced Hooks",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Claude Code with Advanced Hooks": {
      "main": [
        [
          {
            "node": "Development Summary",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Process Streaming Blocks",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {},
  "versionId": "85d26cb7-3f31-5ef4-9d24-84c6f9b0g3f5",
  "id": "claude-advanced-hooks-example",
  "meta": {
    "instanceId": "claude-code-n8n-hooks-example"
  },
  "tags": ["claude-code", "hooks", "python", "development", "automation"]
}